bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*15,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-30,90), xlim = c(-45,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-30,90), xlim = c(-45,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-45,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=fsize,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=fsize/10,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=fsize/5,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=fsize/5,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =15,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=fsize/5,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=fsize/5,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =250,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=fsize/5,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
library(igraph)
library(graphlayouts)
library(qgraph)
bigram_graph <- pq_digrams %>%
filter(rank < 101) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
# a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
#
# ggraph(bigram_graph, layout = "fr") +
#   geom_edge_link(show.legend = FALSE,
#                  arrow = a, end_cap = circle(.07, 'inches')) +
#   geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
#                  arrow = a, end_cap = circle(.035, 'inches')) +
#   geom_node_point(color = "blue", size = 3) +
#   geom_node_text(aes(label = name), vjust = 1, hjust = 1)+
#   theme_void()
# V(bigram_graph)$size <- V(bigram_graph)$t_freq*10
l <- layout_with_fr(bigram_graph)
e <- get.edgelist(bigram_graph,names=FALSE)
m <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(bigram_graph))
deg <- degree(bigram_graph,mode="all")
fsize <- degree(bigram_graph, mode= "all")
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =500,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=fsize/5,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
plot(bigram_graph,layout=m, edge.arrow.size =.05,vertex.color = "pink", vertex.size =deg*150,vertex.frame.color="deeppink",vertex.label.color="black", vertex.label.cex=0.55,vertex.label.dist=0.8,edge.curve = 0.75,edge.color="skyblue",edge.label.family="Arial", rescale=F, axes = FALSE, ylim = c(-50,90), xlim = c(-55,120), asp =0)
knitr::opts_chunk$set(echo = TRUE)
#library(dplyr)
#library(tidytext)
#library(tidyverse)
#library(widyr)
#library(igraph)
#library(ggraph)
#library(wordcloud)
#library(reshape2)
#library(graphlayouts)
#library(pluralize)
#library(quanteda)
# library(spacyr)
# library(reticulate)
#library(igraph)
#library(graphlayouts)
#library(qgraph)
require(pacman)
pacman::p_load(dplyr, tidytext, tidyverse,
widyr,igraph, ggraph,
wordcloud, reshape2, graphlayouts,
pluralize, quanteda, qgraph, cowplot)
#Function to adjust table width:
html_table_width <- function(kable_output, width){
width_html <- paste0(paste0('<col width="', width, '">'), collapse = "\n")
sub("<table>", paste0("<table>\n", width_html), kable_output)
}
# Source: https://github.com/rstudio/bookdown/issues/122
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- read.csv("https://github.com/burning-issues/burn_iss-website/blob/main/assets/data/wildfires-survey-answers_formatted.csv")
# t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
# colnames(t_df1) <- c("ID", "Question type", "Answers")
# knitr::kable(head(t_df1),format="html")%>%
#    html_table_width(c(100,100,100))
# setwd("../community-paper/wildfires_watersheds_rdocs")
head(t_df)
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- read.csv("../assets/data/wildfires-survey-answers_formatted.csv")
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- read_csv("../assets/data/wildfires-survey-answers_formatted.csv")
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- read_csv("https://github.com/burning-issues/burn_iss-website/blob/main/assets/data/wildfires-survey-answers_formatted.csv")
# t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
# colnames(t_df1) <- c("ID", "Question type", "Answers")
# knitr::kable(head(t_df1),format="html")%>%
#    html_table_width(c(100,100,100))
# setwd("../community-paper/wildfires_watersheds_rdocs")
t_df
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- read_csv("assets/data/wildfires-survey-answers_formatted.csv")
# t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
# colnames(t_df1) <- c("ID", "Question type", "Answers")
# knitr::kable(head(t_df1),format="html")%>%
#    html_table_width(c(100,100,100))
# setwd("../community-paper/wildfires_watersheds_rdocs")
#library(dplyr)
#library(tidytext)
#library(tidyverse)
#library(widyr)
#library(igraph)
#library(ggraph)
#library(wordcloud)
#library(reshape2)
#library(graphlayouts)
#library(pluralize)
#library(quanteda)
# library(spacyr)
# library(reticulate)
#library(igraph)
#library(graphlayouts)
#library(qgraph)
require(pacman)
pacman::p_load(dplyr, tidytext, tidyverse,
widyr,igraph, ggraph,
wordcloud, reshape2, graphlayouts,
pluralize, quanteda, qgraph, cowplot, readr)
#Function to adjust table width:
html_table_width <- function(kable_output, width){
width_html <- paste0(paste0('<col width="', width, '">'), collapse = "\n")
sub("<table>", paste0("<table>\n", width_html), kable_output)
}
# Source: https://github.com/rstudio/bookdown/issues/122
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- readr("assets/data/wildfires-survey-answers_formatted.csv")
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- read_csv("assets/data/wildfires-survey-answers_formatted.csv")
# t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
# colnames(t_df1) <- c("ID", "Question type", "Answers")
# knitr::kable(head(t_df1),format="html")%>%
#    html_table_width(c(100,100,100))
# setwd("../community-paper/wildfires_watersheds_rdocs")
head(t_df)
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- read_csv("assets/data/wildfires-survey-answers_formatted.csv")
t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
# colnames(t_df1) <- c("ID", "Question type", "Answers")
# knitr::kable(head(t_df1),format="html")%>%
#    html_table_width(c(100,100,100))
# setwd("../community-paper/wildfires_watersheds_rdocs")
# setwd("../community-paper/wildfires_watersheds_vault")
t_df <- read_csv("assets/data/wildfires-survey-answers_formatted.csv",show_col_types = FALSE)
t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
# colnames(t_df1) <- c("ID", "Question type", "Answers")
# knitr::kable(head(t_df1),format="html")%>%
#    html_table_width(c(100,100,100))
# setwd("../community-paper/wildfires_watersheds_rdocs")
t_df <- read_csv("assets/data/wildfires-survey-answers_formatted.csv",show_col_types = FALSE)
t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
colnames(t_df1) <- c("ID", "Question type", "Answers")
knitr::kable(head(t_df1),format="html")%>%
html_table_width(c(100,100,100))
t_df <- read_csv("assets/data/wildfires-survey-answers_formatted.csv",show_col_types = FALSE)
t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
colnames(t_df1) <- c("ID", "Question type", "Answers")
knitr::kable(head(t_df1),format="html")%>%
html_table_width(c(100,100,300))
t_df <- read_csv("assets/data/wildfires-survey-answers_formatted.csv",show_col_types = FALSE)
t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
colnames(t_df1) <- c("ID", "Question type", "Answers")
knitr::kable(head(t_df1),format="html")%>%
html_table_width(c(100,100,400))
t_df <- read_csv("assets/data/wildfires-survey-answers_formatted.csv",show_col_types = FALSE)
t_df1 <- as.data.frame(rbind(t_df[c(1:3),],t_df[c(68:71),], row.names = FALSE))
colnames(t_df1) <- c("ID", "Question type", "Answers")
knitr::kable(head(t_df1),format="html")%>%
html_table_width(c(100,100,500))
#For research area questions
ra_dat <- t_df%>%filter(question=="research-a")
#For pressing questions
pq_dat <- t_df%>%filter(question=="pressing-q")
ra_dat%>%
unnest_tokens(output = word, input = answers)%>%
count(word, sort = TRUE)%>%
distinct() %>%
with(wordcloud(word,n, scale = c(3, .07)))
stp_eg <- as.data.frame(rbind(head(stop_words),
tail(stop_words)),
row.names = FALSE)
colnames(stp_eg) <- c("Stop word", "Lexicon")
knitr::kable(stp_eg,format="html") %>%
html_table_width(c(200,200))
pq_tokens <- pq_dat %>%
unnest_tokens(output = word, input = answers)%>%
anti_join(stop_words, by = "word")%>%
filter(str_detect(word,"[:alpha:]"))%>%
distinct() %>%
count(word, sort = FALSE) %>%
mutate(length = nchar(word))
head(pq_tokens)
pq_dat %>%
unnest_tokens(output = word, input = answers)%>%
distinct() %>%
count(word, sort = TRUE) %>%
with(wordcloud(word,n, scale = c(4, .1)))
gls <- as.data.frame(pq_dat %>%
unnest_tokens(output = word, input = answers)%>%
anti_join(stop_words, by = "word")%>%
filter(str_detect(word,"[:alpha:]"))%>%
distinct() %>%
count(word, sort = TRUE))
head(gls)
pq_dat %>%
unnest_tokens(output = word, input = answers)%>%
anti_join(stop_words, by = "word")%>%
filter(str_detect(word,"[:alpha:]"))%>%
distinct() %>%
count(word, sort = TRUE) %>%
with(wordcloud(word,n, scale = c(4, .1)))
gls <- as.data.frame(pq_dat %>%
unnest_tokens(output = word, input = answers)%>%
anti_join(stop_words, by = "word")%>%
filter(str_detect(word,"[:alpha:]"))%>%
distinct() %>%
count(word, sort = TRUE))
gls_dsp <- rbind(head(gls),tail(gls))
colnames(gls_dsp) <- c("Word", "Frequency")
knitr::kable(gls_dsp,format="html") %>%
html_table_width(c(200,200))
gls_fw <- filter(gls, n > 2)
gls_fwp <- rbind(head(gls_fw),tail(gls_fw))
colnames(gls_fwp) <- c("Word", "Frequency")
knitr::kable(gls_fwp,format="html") %>%
html_table_width(c(200,200))
eda_words <- pq_dat %>%
unnest_tokens(output = word, input = answers)%>%
anti_join(stop_words, by = "word")%>%
filter(str_detect(word,"[:alpha:]"))%>%
distinct() %>%
count(word, sort = TRUE) %>%
select(word, n) %>%
mutate(rank = row_number(),
total=sum(n),
t_freq = n/total)
#Distribution of frequency values
eda_words %>% filter(rank<26) %>%
ggplot(aes(t_freq, fct_reorder(word, t_freq), fill = t_freq)) +
geom_col(show.legend = FALSE) +
labs(x = "Frequency", y = NULL)
#Zipf's law for survey answers
eda_words %>%
ggplot(aes(rank,t_freq)) +
geom_line(size = 1.1, alpha = 0.8, show.legend = FALSE) +
geom_abline(intercept = -0.62, slope = -1.1,
color = "gray50", linetype = 2) +
scale_x_log10() +
scale_y_log10()
pq_snt <- pq_dat %>%
unnest_sentences(output = sentences, input = answers)
pq_snt_s <- pq_snt[c(1:6),]
knitr::kable(pq_snt_s,format="html") %>%
html_table_width(c(100,100,400))
